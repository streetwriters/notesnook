diff --git a/node_modules/react-native-actions-shortcuts/android/build.gradle b/node_modules/react-native-actions-shortcuts/android/build.gradle
index 19bd311..bc37238 100644
--- a/node_modules/react-native-actions-shortcuts/android/build.gradle
+++ b/node_modules/react-native-actions-shortcuts/android/build.gradle
@@ -29,7 +29,7 @@ android {
   compileSdkVersion getExtOrIntegerDefault('compileSdkVersion')
   buildToolsVersion getExtOrDefault('buildToolsVersion')
   defaultConfig {
-    minSdkVersion 16
+    minSdkVersion getExtOrDefault('minSdkVersion')
     targetSdkVersion getExtOrIntegerDefault('targetSdkVersion')
     versionCode 1
     versionName "1.0"
diff --git a/node_modules/react-native-actions-shortcuts/android/src/main/java/com/reactnativeshortcuts/ShortcutItem.kt b/node_modules/react-native-actions-shortcuts/android/src/main/java/com/reactnativeshortcuts/ShortcutItem.kt
index b438823..ba03915 100644
--- a/node_modules/react-native-actions-shortcuts/android/src/main/java/com/reactnativeshortcuts/ShortcutItem.kt
+++ b/node_modules/react-native-actions-shortcuts/android/src/main/java/com/reactnativeshortcuts/ShortcutItem.kt
@@ -70,8 +70,7 @@ data class ShortcutItem(
             val shortTitle = bundle.getString(KeyName.shortTitle)
             val iconName = bundle.getString(KeyName.iconName)
             val jsonString = bundle.getString(KeyName.data)
-            val jsonObject = JSONObject(jsonString)
-
+            val jsonObject = if (jsonString != null) JSONObject(jsonString) else null
             return ShortcutItem(type, title, shortTitle ?: title, iconName, jsonObject)
         }
 
diff --git a/node_modules/react-native-actions-shortcuts/android/src/main/java/com/reactnativeshortcuts/ShortcutsModule.kt b/node_modules/react-native-actions-shortcuts/android/src/main/java/com/reactnativeshortcuts/ShortcutsModule.kt
index ec847cc..a4686a0 100644
--- a/node_modules/react-native-actions-shortcuts/android/src/main/java/com/reactnativeshortcuts/ShortcutsModule.kt
+++ b/node_modules/react-native-actions-shortcuts/android/src/main/java/com/reactnativeshortcuts/ShortcutsModule.kt
@@ -28,18 +28,18 @@ class ShortcutsModule(reactContext: ReactApplicationContext) :
         reactContext.addActivityEventListener(this)
     }
 
-    override fun onCatalystInstanceDestroy() {
+    override fun invalidate() {
+
         reactApplicationContext.removeActivityEventListener(this)
-        super.onCatalystInstanceDestroy()
+        super.invalidate()
     }
 
-    override fun onActivityResult(activity: Activity?, requestCode: Int, resultCode: Int, data: Intent?) {
-        // No implementation needed
+    override fun onUserLeaveHint(activity: Activity) {
+        super.onUserLeaveHint(activity)
     }
 
-    override fun onNewIntent(intent: Intent?) {
-        emitEvent(intent)
-    }
+
+
 
     override fun getName(): String {
         return MODULE_NAME
@@ -53,7 +53,7 @@ class ShortcutsModule(reactContext: ReactApplicationContext) :
         }
 
         val context = reactApplicationContext ?: return
-        val activity = currentActivity ?: return
+        val activity = reactApplicationContext.currentActivity ?: return
 
         val shortcutItems = items.toArrayList().mapIndexed { index, _ ->
             val map = items.getMap(index) ?: return
@@ -94,7 +94,7 @@ class ShortcutsModule(reactContext: ReactApplicationContext) :
             promise.reject(NotSupportedException)
         }
 
-        val shortcutManager = currentActivity?.getSystemService<ShortcutManager>(ShortcutManager::class.java)
+        val shortcutManager = reactApplicationContext.currentActivity?.getSystemService<ShortcutManager>(ShortcutManager::class.java)
         val shortcutItems = shortcutManager?.dynamicShortcuts?.map {
             ShortcutItem(it.id, it.longLabel.toString(), it.shortLabel.toString(), null, null)
         }
@@ -109,7 +109,7 @@ class ShortcutsModule(reactContext: ReactApplicationContext) :
             promise.reject(NotSupportedException)
         }
 
-        val shortcutItem = getShortcutItemFromIntent(currentActivity?.intent)
+        val shortcutItem = getShortcutItemFromIntent(reactApplicationContext.currentActivity?.intent)
 
         promise.resolve(shortcutItem?.toMap())
     }
@@ -121,7 +121,7 @@ class ShortcutsModule(reactContext: ReactApplicationContext) :
             return
         }
 
-        val shortcutManager = currentActivity?.getSystemService<ShortcutManager>(ShortcutManager::class.java)
+        val shortcutManager = reactApplicationContext.currentActivity?.getSystemService<ShortcutManager>(ShortcutManager::class.java)
         shortcutManager?.removeAllDynamicShortcuts()
     }
 
@@ -145,6 +145,19 @@ class ShortcutsModule(reactContext: ReactApplicationContext) :
     fun isSupported(): Boolean {
         return Build.VERSION.SDK_INT >= 25
     }
+
+    override fun onActivityResult(
+        activity: Activity,
+        requestCode: Int,
+        resultCode: Int,
+        data: Intent?
+    ) {
+        TODO("Not yet implemented")
+    }
+
+    override fun onNewIntent(intent: Intent) {
+        emitEvent(intent)
+    }
 }
 
 object NotSupportedException: Throwable("Feature not supported, requires version 25 or above")
\ No newline at end of file
diff --git a/node_modules/react-native-actions-shortcuts/ios/Shortcuts.swift b/node_modules/react-native-actions-shortcuts/ios/Shortcuts.swift
index ad77cd9..7c4a594 100644
--- a/node_modules/react-native-actions-shortcuts/ios/Shortcuts.swift
+++ b/node_modules/react-native-actions-shortcuts/ios/Shortcuts.swift
@@ -2,7 +2,7 @@ import UIKit
 
 typealias ShortcutItem = [String: Any];
 
-protocol ShortcutsDelegate: class {
+protocol ShortcutsDelegate: AnyObject {
     func onShortcutItemPressed(_ item: ShortcutItem)
 }
 
@@ -114,6 +114,6 @@ fileprivate extension UIApplicationShortcutIcon {
         guard let imageName = imageName else {
             return nil
         }
-        return UIApplicationShortcutIcon(templateImageName: imageName)
+        return UIApplicationShortcutIcon(systemImageName: imageName)
     }
 }
